#!/usr/bin/env bats

#
# setup
#

setup() {
  # load common lib
  load '../../../lib/common'
  
  # load bash util
  __test__load_bash_util
}

#
# tear down
#

# teardown() {
# }

#
# test definitions
#

# ==============================================================================
# option argument type mismatch
# ==============================================================================

@test "option argument type mismatch" {
  local __test__expected_output="invalid int value: 'value'"

  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_option 'parser_name' 'option_name'

  bash_util__args__set_option_short_name 'parser_name' 'option_name' '-o'
  
  bash_util__args__set_option_type 'parser_name' 'option_name' "${BASH_UTIL__TYPE__INT}"
  
  local __test__output=
  {
    __test__output="$(bash_util__args__parse_args 'parser_name' '-o' 'value' 2>&1)"
  } || {
    true
  }

  [[ "${__test__output}" = *"${__test__expected_output}"* ]]
}

# ==============================================================================
# option argument type default
# ==============================================================================

@test "option argument type default" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_option 'parser_name' 'option_name'

  bash_util__args__set_option_short_name 'parser_name' 'option_name' '-o'
  
  bash_util__args__parse_args 'parser_name' '-o' 'value'

  local __test__type=
  __test__type="$(bash_util__args__get_option_value_type 'parser_name' 'option_name')"
  
  [[ "${__test__type}" = "${BASH_UTIL__TYPE__STRING}" ]]
  
  local __test__output=
  __test__output="$(bash_util__args__get_option_value 'parser_name' 'option_name')"
  
  [[ "${__test__output}" = 'value' ]]
}

# ==============================================================================
# option argument type string
# ==============================================================================

@test "option argument type string" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_option 'parser_name' 'option_name'

  bash_util__args__set_option_short_name 'parser_name' 'option_name' '-o'
  
  bash_util__args__set_option_type 'parser_name' 'option_name' "${BASH_UTIL__TYPE__STRING}"
  
  bash_util__args__parse_args 'parser_name' '-o' 'value'
  
  local __test__output=
  __test__output="$(bash_util__args__get_option_value 'parser_name' 'option_name')"
  
  [[ "${__test__output}" = 'value' ]]
}

# ==============================================================================
# option argument type bool
# ==============================================================================

@test "option argument type bool" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_option 'parser_name' 'option_name'

  bash_util__args__set_option_short_name 'parser_name' 'option_name' '-o'
  
  bash_util__args__set_option_type 'parser_name' 'option_name' "${BASH_UTIL__TYPE__BOOL}"
  
  bash_util__args__parse_args 'parser_name' '-o' "${BASH_UTIL__BOOL__TRUE}"
  
  local __test__output=
  __test__output="$(bash_util__args__get_option_value 'parser_name' 'option_name')"
  
  [[ "${__test__output}" = "${BASH_UTIL__BOOL__TRUE}" ]]
}

# ==============================================================================
# option argument type int
# ==============================================================================

@test "option argument type int" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_option 'parser_name' 'option_name'

  bash_util__args__set_option_short_name 'parser_name' 'option_name' '-o'
  
  bash_util__args__set_option_type 'parser_name' 'option_name' "${BASH_UTIL__TYPE__INT}"
  
  bash_util__args__parse_args 'parser_name' '-o' '10'
  
  local __test__output=
  __test__output="$(bash_util__args__get_option_value 'parser_name' 'option_name')"
  
  [[ "${__test__output}" = '10' ]]
}

# ==============================================================================
# option argument type list
# ==============================================================================

@test "option argument type list" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_option 'parser_name' 'option_name'

  bash_util__args__set_option_short_name 'parser_name' 'option_name' '-o'
  
  bash_util__args__set_option_type 'parser_name' 'option_name' "${BASH_UTIL__TYPE__LIST}"
  
  bash_util__list__assign 'list_name' 'value'
  
  bash_util__args__parse_args 'parser_name' '-o' 'list_name'
  
  local __test__list=
  __test__list="$(bash_util__args__get_option_value 'parser_name' 'option_name')"
  
  local __test__output=
  __test__output="$(bash_util__list__get_element_value "${__test__list}" 0)"
  
  [[ "${__test__output}" = 'value' ]]
}
