#!/usr/bin/env bats

#
# setup
#

setup() {
  # load common lib
  load '../../../lib/common'
  
  # load bash util
  __test__load_bash_util
}

#
# tear down
#

# teardown() {
# }

#
# test definitions
#

# ==============================================================================
# positional argument action mismatch
# ==============================================================================

@test "positional argument action mismatch produces error" {
  local __test__expected_output="invalid action: 'invalid'"

  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'
  
  local __test__output=
  {
    __test__output="$(bash_util__args__set_positional_action 'parser_name' 'positional_name' 'invalid' 2>&1)"
  } || {
    true
  }

  [[ "${__test__output}" = *"${__test__expected_output}"* ]]
}

# ==============================================================================
# positional argument action default
# ==============================================================================

@test "positional argument action default stores value" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'
  
  bash_util__args__parse_args 'parser_name' 'value'
  
  local __test__output=
  __test__output="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"
  
  [[ "${__test__output}" = 'value' ]]
}

# ==============================================================================
# positional argument action STORE
# ==============================================================================

@test "positional argument action STORE stores value" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'

  bash_util__args__set_positional_action 'parser_name' 'positional_name' "${BASH_UTIL__ARGS__ACTION__STORE}"
  
  bash_util__args__parse_args 'parser_name' 'value'
  
  local __test__output=
  __test__output="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"
  
  [[ "${__test__output}" = 'value' ]]
}

# ==============================================================================
# positional argument action STORE_CONST
# ==============================================================================

@test "positional argument action STORE_CONST stores const when no args provided" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'

  bash_util__args__set_positional_const 'parser_name' 'positional_name' "${BASH_UTIL__TYPE__STRING}" 'hello world'
  
  bash_util__args__set_positional_action 'parser_name' 'positional_name' "${BASH_UTIL__ARGS__ACTION__STORE_CONST}"

  bash_util__args__parse_args 'parser_name'
  
  local __test__output=
  __test__output="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"
  
  [[ "${__test__output}" = 'hello world' ]]
}

# ==============================================================================
# positional argument action STORE_TRUE
# ==============================================================================

@test "positional argument action STORE_TRUE stores TRUE when no args provided" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'
  
  bash_util__args__set_positional_action 'parser_name' 'positional_name' "${BASH_UTIL__ARGS__ACTION__STORE_TRUE}"

  bash_util__args__parse_args 'parser_name'
  
  local __test__output=
  __test__output="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"
  
  [[ "${__test__output}" = "${BASH_UTIL__BOOL__TRUE}" ]]
}

# ==============================================================================
# positional argument action STORE_FALSE
# ==============================================================================

@test "positional argument action STORE_FALSE stores FALSE when no args provided" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'
  
  bash_util__args__set_positional_action 'parser_name' 'positional_name' "${BASH_UTIL__ARGS__ACTION__STORE_FALSE}"

  bash_util__args__parse_args 'parser_name'
  
  local __test__output=
  __test__output="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"
  
  [[ "${__test__output}" = "${BASH_UTIL__BOOL__FALSE}" ]]
}

# ==============================================================================
# positional argument action COUNT
# ==============================================================================

@test "positional argument action COUNT stores 1 when no args provided" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'
  
  bash_util__args__set_positional_action 'parser_name' 'positional_name' "${BASH_UTIL__ARGS__ACTION__COUNT}"

  bash_util__args__parse_args 'parser_name'
  
  local __test__output=
  __test__output="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"
  
  [[ "${__test__output}" = "1" ]]
}

# ==============================================================================
# positional argument action APPEND
# ==============================================================================

@test "positional argument action APPEND stores value in dict" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'
  
  bash_util__args__set_positional_action 'parser_name' 'positional_name' "${BASH_UTIL__ARGS__ACTION__APPEND}"

  bash_util__args__parse_args 'parser_name' 'value'

  local __test__dict=
  __test__dict="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"

  local __test__output=
  __test__output="$(bash_util__dict__get_key_value "${__test__dict}" 'value0')"

  [[ "${__test__output}" = 'value' ]]
}

# ==============================================================================
# positional argument action APPEND_CONST
# ==============================================================================

@test "positional argument action APPEND_CONST stores const in dict when no args provided" {
  bash_util__args__create_parser 'parser_name'
  
  bash_util__args__add_positional 'parser_name' 'positional_name'

  bash_util__args__set_positional_const 'parser_name' 'positional_name' "${BASH_UTIL__TYPE__STRING}" 'hello world'
  
  bash_util__args__set_positional_action 'parser_name' 'positional_name' "${BASH_UTIL__ARGS__ACTION__APPEND_CONST}"

  bash_util__args__parse_args 'parser_name'

  local __test__dict=
  __test__dict="$(bash_util__args__get_positional_value 'parser_name' 'positional_name')"

  local __test__output=
  __test__output="$(bash_util__dict__get_key_value "${__test__dict}" 'value0')"

  [[ "${__test__output}" = 'hello world' ]]
}
